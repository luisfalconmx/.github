name: Releaser

on:
  workflow_call:
    inputs:
      name:
        description: Enter a name for the job
        type: string
        required: false
        default: Releaser

      runs-on:
        description: Use runs-on to define the type of machine to run the job on.
        type: string
        required: false
        default: ubuntu-latest

      timeout-minutes:
        description: Specifies the maximum execution time of the job (in minutes)
        type: number
        required: false
        default: 25

      dockerfile:
        description: Enter the Dockerfile that will be used to build the image
        type: string
        required: false
        default: Dockerfile

      image-name:
        description: Enter the name of the image
        type: string
        required: false

      image-tag:
        description: Enter the label that will serve to identify the image in future works
        type: string
        required: false
        default: latest

      readme:
        description: specifies which readme file will be used to publish it to DockerHub
        type: string
        required: false
        default: README.md

      pre-release:
        description: specifies if this is a pre-release
        type: boolean
        required: false
        default: false

    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_PASSWORD:
        required: false
      DOCKERHUB_TOKEN:
        required: false
      GHCR_USERNAME:
        required: false
      PERSONAL_ACCESS_TOKEN:
        required: false

jobs:
  releaser:
    name: ${{inputs.name}}
    runs-on: ${{inputs.runs-on}}
    timeout-minutes: ${{inputs.timeout-minutes}}
    steps:
      - name: GitHub Repository Metadata
        uses: varunsridharan/action-repository-meta@main
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          ref: ${{env.REPOSITORY_DEFAULT_BRANCH}}

      - name: Run release drafter
        uses: release-drafter/release-drafter@v5
        if: ${{inputs.pre-release}}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Update Version in package.json File
        if: ${{!inputs.pre-release}}
        run: npm version ${{github.event.release.tag_name}} --allow-same-version --no-git-tag-version

      - name: Commit Release Files
        uses: EndBug/add-and-commit@v8
        if: ${{!inputs.pre-release}}
        with:
          add: package.json
          message: 'build: version updated [skip ci]'
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com

      - name: Download artifact
        uses: actions/download-artifact@v2
        if: ${{!inputs.pre-release}}
        with:
          name: ${{inputs.image-tag}}
          path: /tmp

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{!inputs.pre-release}}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{!inputs.pre-release}}
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{!inputs.pre-release}}
        with:
          registry: ghcr.io
          username: ${{secrets.GHCR_USERNAME}}
          password: ${{secrets.PERSONAL_ACCESS_TOKEN}}

      - name: Load Image
        if: ${{!inputs.pre-release}}
        run: docker load --input /tmp/${{inputs.image-tag}}.tar

      - name: Show All Images
        if: ${{!inputs.pre-release}}
        run: docker image ls

      - name: Add New Tags
        if: ${{!inputs.pre-release}}
        env:
          RELEASE: ${{github.event.release.tag_name}}
        run: |
          docker image tag ${{inputs.image-name}} docker.io/${{inputs.image-name}}:${{env.RELEASE}}
          docker image tag ${{inputs.image-name}} ghcr.io/${{inputs.image-name}}:${{env.RELEASE}}

      - name: Publish Image
        if: ${{!inputs.pre-release}}
        run: docker image push -a ${{inputs.image-name}}