name: Release

on:
  workflow_call:
    inputs:
      NAME:
        description: Enter a name for the job
        type: string
        required: false
        default: Release Drafter

      RUNS_ON:
        description: Use runs-on to define the type of machine to run the job on.
        type: string
        required: false
        default: ubuntu-latest

      TIMEOUT_MINUTES:
        description: Specifies the maximum execution time of the job (in minutes)
        type: number
        required: false
        default: 25

    secrets:
      PAT:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      GCR_USERNAME:
        required: true

jobs:
  release:
    name: ${{inputs.NAME}}
    runs-on: ${{inputs.RUNS_ON}}
    timeout-minutes: ${{inputs.TIMEOUT_MINUTES}}
    env:
      REPOSITORY_SLUG: ${{github.event.repository.name}}
      REPOSITORY_DESCRIPTION: ${{github.event.repository.description}}
      REPOSITORY_DEFAULT_BRANCH: ${{github.event.repository.default_branch}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run release drafter
        id: release-drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Upgrade NPM Version
        env:
          NPM_VERSION: ${{steps.release-drafter.outputs.tag_name}}
        run: npm version ${{env.NPM_VERSION}} --allow-same-version --no-git-tag-version

      - name: Commit Release Files
        uses: EndBug/add-and-commit@v7
        with:
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com
          message: 'ci: release files updated [skip ci]'
          add: package.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{env.REPOSITORY_SLUG}}
          path: /tmp

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{secrets.GCR_USERNAME}}
          password: ${{secrets.PAT}}

      - name: Build and push docker image to Dockerhub and GCR
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          RELEASE_VERSION: ${{steps.release-drafter.outputs.tag_name}}
          DOCKERHUB_TAG: ${{secrets.DOCKERHUB_USERNAME}}/${{env.REPOSITORY_SLUG}}
          GCR_TAG: ${{secrets.GCR_USERNAME}}/${{env.REPOSITORY_SLUG}}
        with:
          push: true
          tags: |
            ${{env.DOCKERHUB_TAG}}:${{env.RELEASE_VERSION}}
            ${{env.DOCKERHUB_TAG}}:latest
            ghcr.io/${{env.GCR_TAG}}:${{env.RELEASE_VERSION}}
            ghcr.io/${{env.GCR_TAG}}:latest

      - name: Image digest
        run: echo ${{steps.docker_build.outputs.digest}}

      - name: Push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASS: ${{secrets.DOCKERHUB_PASSWORD}}
        with:
          destination_container_repo: ${{secrets.DOCKERHUB_USERNAME}}/${{env.REPOSITORY_SLUG}}
          provider: dockerhub
          short_description: ${{env.REPOSITORY_DESCRIPTION}}
          readme_file: README.md